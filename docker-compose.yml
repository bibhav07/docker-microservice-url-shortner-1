version: '3.9'

services:
  url-service:
    build:
      context: ./url-service
      dockerfile: dockerfile
    container_name: url-service
    environment:
      - NODE_ENV=production
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_HOST=redis
    depends_on:
      - postgres
    networks:
      - backend

  stats-service:
    build:
      context: ./stats-service
      dockerfile: dockerfile
    container_name: stats-service
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - backend

  worker-service:
    build:
      context: ./worker-service
      dockerfile: Dockerfile
    container_name: worker-service
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d/
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - url-service
      - stats-service
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge


    